version: '3.8'

services:
  metrics-consumer:
    image: akmuhammet/metrics-consumer:hw9
    container_name: metrics-consumer
    restart: unless-stopped
    depends_on:
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
    networks:
      - services-network
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    hostname: zookeeper
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    healthcheck:
      test: ["CMD", "bash", "-c", "echo ruok | nc localhost 2181 | grep imok"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "2181:2181"
    networks:
      - services-network

  kafka1:
    image: confluentinc/cp-server:7.7.1
    container_name: kafka1
    restart: unless-stopped
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9091:9091"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29091,PLAINTEXT_HOST://localhost:9091
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29091,PLAINTEXT_HOST://0.0.0.0:9091
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      CONFLUENT_COMMAND_TOPIC_REPLICATION_FACTOR: 2
    healthcheck:
      test: ["CMD", "bash", "-c", "kafka-topics --bootstrap-server localhost:29091 --list || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - services-network

  kafka2:
    image: confluentinc/cp-server:7.7.1
    container_name: kafka2
    restart: unless-stopped
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      CONFLUENT_COMMAND_TOPIC_REPLICATION_FACTOR: 2
    healthcheck:
      test: ["CMD", "bash", "-c", "kafka-topics --bootstrap-server localhost:29092 --list || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - services-network

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    restart: unless-stopped
    ports:
      - 9020:8080
    environment:
      AUTH_TYPE: DISABLED
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:29091,kafka2:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
    networks:
      - services-network
    
  init-topics:
    image: confluentinc/cp-kafka:7.7.1
    container_name: init-topics
    depends_on:
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
    entrypoint: >
      bash -c "
        echo '⏳ Waiting for Kafka to be ready...';
        until kafka-topics --bootstrap-server kafka1:29091 --list; do
          echo 'Kafka not ready yet, retrying in 2s...';
          sleep 2;
        done;
        kafka-topics --bootstrap-server kafka1:29091,kafka2:29092 \
          --create --if-not-exists --topic metrics --replication-factor 2 --partitions 3;
        echo '✅ Topic \"metrics\" created.';
      "
    networks:
      - services-network

networks:
  services-network:
    external: true
